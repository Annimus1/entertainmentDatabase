package dev.pablo.view;

import dev.pablo.model.Movie;
import java.time.LocalDate;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableModel;

public class VPrincipal extends javax.swing.JFrame {

    VAddMovie addMovie; 
    
    public VPrincipal() {
        setSize(500,700);
        setResizable(false);
        
        initComponents();
        MoviesList.setDefaultEditor(Object.class, null);
        setCellsAlignment(MoviesList, SwingConstants.CENTER);
    }

    private void setCellsAlignment(JTable table, int alignment)
    {
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(alignment);

        TableModel tableModel = table.getModel();

        for (int columnIndex = 0; columnIndex < tableModel.getColumnCount(); columnIndex++)
        {
            table.getColumnModel().getColumn(columnIndex).setCellRenderer(rightRenderer);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HeaderPanel = new javax.swing.JPanel();
        Title = new javax.swing.JLabel();
        MiddlePanel = new javax.swing.JPanel();
        ScrollPanel = new javax.swing.JScrollPane();
        MoviesList = new javax.swing.JTable();
        BottomPanel = new javax.swing.JPanel();
        Deletebtn = new javax.swing.JButton();
        Editbtn = new javax.swing.JButton();
        Addbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Title.setFont(new java.awt.Font("JetBrains Mono", 1, 24)); // NOI18N
        Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Title.setText("Entertainment Database");

        javax.swing.GroupLayout HeaderPanelLayout = new javax.swing.GroupLayout(HeaderPanel);
        HeaderPanel.setLayout(HeaderPanelLayout);
        HeaderPanelLayout.setHorizontalGroup(
            HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HeaderPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Title)
                .addGap(424, 424, 424))
        );
        HeaderPanelLayout.setVerticalGroup(
            HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(Title)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        MoviesList.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        MoviesList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1","test View", "Movie", "Spanish", "5.0", "Note", "2005-11-12"},

            },
            new String [] {
                "ID", "name","type","language", "rate","note","watchDate"
            }

        ));
        MoviesList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MoviesListMousePressed(evt);
            }
        });
        ScrollPanel.setViewportView(MoviesList);

        javax.swing.GroupLayout MiddlePanelLayout = new javax.swing.GroupLayout(MiddlePanel);
        MiddlePanel.setLayout(MiddlePanelLayout);
        MiddlePanelLayout.setHorizontalGroup(
            MiddlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ScrollPanel)
        );
        MiddlePanelLayout.setVerticalGroup(
            MiddlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 638, Short.MAX_VALUE)
        );

        Deletebtn.setText("Delete");
        Deletebtn.setEnabled(false);
        Deletebtn.setMargin(new java.awt.Insets(20, 20, 20, 20));
        Deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletebtnActionPerformed(evt);
            }
        });

        Editbtn.setText("Edit");
        Editbtn.setEnabled(false);
        Editbtn.setMargin(new java.awt.Insets(20, 20, 20, 20));
        Editbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BottomPanelLayout = new javax.swing.GroupLayout(BottomPanel);
        BottomPanel.setLayout(BottomPanelLayout);
        BottomPanelLayout.setHorizontalGroup(
            BottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BottomPanelLayout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(Deletebtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 311, Short.MAX_VALUE)
                .addComponent(Editbtn)
                .addGap(271, 271, 271))
        );
        BottomPanelLayout.setVerticalGroup(
            BottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BottomPanelLayout.createSequentialGroup()
                .addGroup(BottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Deletebtn)
                    .addComponent(Editbtn))
                .addGap(0, 15, Short.MAX_VALUE))
        );

        Addbtn.setText("Add");
        Addbtn.setMargin(new java.awt.Insets(20, 20, 20, 20));
        Addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HeaderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(BottomPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Addbtn)
                .addGap(147, 147, 147))
            .addComponent(MiddlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(HeaderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MiddlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BottomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Addbtn)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DeletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletebtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeletebtnActionPerformed

//    MovieList on press a row 
    private void MoviesListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MoviesListMousePressed
    // enable edit and delete btn
    Editbtn.setEnabled(true);
    Deletebtn.setEnabled(true);
    }//GEN-LAST:event_MoviesListMousePressed

    private void AddbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddbtnActionPerformed
        // Handle click
        try{
            this.addMovie = new VAddMovie(this, rootPaneCheckingEnabled);
            this.addMovie.setLocationRelativeTo(this);
            this.addMovie.setVisible(true);
            this.addMovie.setAlwaysOnTop(true);
        }
        
        // Clear selection from MovieList
        finally{
        CleanSelected();
        }
    }//GEN-LAST:event_AddbtnActionPerformed

    private void EditbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditbtnActionPerformed
        //  get selected row        
        int selectedRow = MoviesList.getSelectedRow(); 
        // get watchDate        
        String baseDate = MoviesList.getValueAt(selectedRow, 6).toString();
        int year =  Integer.parseInt(baseDate.split("-")[0]);
        int month =  Integer.parseInt(baseDate.split("-")[1]);
        int day =  Integer.parseInt(baseDate.split("-")[2]);
                
        // create Movie       
        Movie m = new Movie(Integer.parseInt(MoviesList.getValueAt(selectedRow, 0).toString()), 
                            MoviesList.getValueAt(selectedRow, 1).toString(),
                            Float.parseFloat(MoviesList.getValueAt(selectedRow, 4).toString()),
                            MoviesList.getValueAt(selectedRow, 3).toString(),
                            MoviesList.getValueAt(selectedRow, 5).toString(),
                            MoviesList.getValueAt(selectedRow, 2).toString(),
                            LocalDate.of(year, month, day)
        );
        
        
        try{
            this.addMovie = new VAddMovie(this, rootPaneCheckingEnabled, m);
            this.addMovie.setLocationRelativeTo(this);
            this.addMovie.setVisible(true);
            this.addMovie.setAlwaysOnTop(true);
        }
        
        // Clear selection from MovieList
        finally{
        CleanSelected();
        }
    }//GEN-LAST:event_EditbtnActionPerformed

    private void CleanSelected(){
        MoviesList.clearSelection();
        Editbtn.setEnabled(false);
        Deletebtn.setEnabled(false);
    }
    
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Addbtn;
    private javax.swing.JPanel BottomPanel;
    private javax.swing.JButton Deletebtn;
    private javax.swing.JButton Editbtn;
    private javax.swing.JPanel HeaderPanel;
    private javax.swing.JPanel MiddlePanel;
    private javax.swing.JTable MoviesList;
    private javax.swing.JScrollPane ScrollPanel;
    private javax.swing.JLabel Title;
    // End of variables declaration//GEN-END:variables
}
